Explanation of the database schema

From the outset the database was needed to store two main data types, data on human kinases and data on inhibitors of those human kinases. It was logical to split the database into two tables, one for kinases and one for inhibitors. Within these two tables, fields were identified which would comprise the types of data we wanted to display on the website, such as kinase and gene names, genomic location and information on phosphosites. 

The first main issue with this initial proposed schema was the nature of the relationships that were proposed within the tables. Kinases can potentially be inhibited by more than one inhibitor, and inhibitors can act on more than one human kinase. This creates a many to many relationship between the two tables; if the inhibitor table stored data on the kinases each inhibitor acted on, and the kinase table stored data on the inhibitors which act on each kinase, then each kinase would be present multiple times in the inhibitor table and vice versa. Many to many relationships are not supported in relational databases and can be resolved through introducing an intermediate table.

The intermediate table introduced ('Kinase inhibitor') splits the many to many relationship into two one to many relationships; this table effectively stores all of the relationships between kinases and inhibitors identified in the data; each row will contain a unique relationship between an kinase and one of its inhibitors, meaning that while both the kinase and inhibitor will occur many times in the table, the unique combination of the two symbolises the relationship between a kinase and its inhibitors (and vice versa). 

Focusing specifically on the Kinase table, the phosphosite info field also caused issues. Because a kinase can have multiple phosphosites, storing all that information within one field of the kinase table would make the field non-atomic. The solution to this is to introduce another table which stores the data for each phosphosite associated with each kinase in the kinase table. In this phosphosite information table each site is uniquely identified by a combination of the kinase and a phosphosite location.

Upon implementing real life data into the database another issue was raised. Inhibitors can target multiple proteins, but proteins can also have multiple names which are used to describe an inhibitors target. An example of this is MK01_HUMAN, a human kinase used in the dummy database. Another name for MK01_HUMAN (as found on Uniprot) is ERK2, and in an online database which contained no information on inhibitors that target MK01_HUMAN, ten inhibitors were found to act on ERK2. If the database were only to use one name for each protein kinase when there are often several available and used, then there would be a large amount of data lost or relationships unidentified. The solution to this was to introduce another table between the kinase table and the intermediate table. This table stores information on all the possible names that a protein kinase can have, and these potential names are then linked with the intermediate table which is linked to the inhibitor database. 

To follow an example query in this database, we can select human kinase MK01_HUMAN. Gene symbol MAPK, information on all its phosphosites are available in the Phosphosite info table and can be selected by using the gene symbol. For MK01_HUMAN the alternative names table holds all the names available, one of which is ERK2. Looking at the intermediate relationship table we can see ten inhibitors which act on ERK2, information for each of which is available on the inhibitor table. 


