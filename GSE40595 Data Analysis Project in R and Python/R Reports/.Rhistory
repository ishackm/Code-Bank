# if P value more than 0.1 = lightgrey
with(subset(res, P.Value>0.1 ), points(logFC, -log10(P.Value), pch=20, col="lightgrey"))
gene_list <- scan("ECM22gene.csv", what="", sep="\n")
gene_list <- as.vector(gene_list)
resmi = res[as.vector(res$Gene.symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
# downregulated genes
resmi1 = subset(res,logFC<0)
resmi1= subset(resmi1,P.Value<0.1)
#upregulated genes
resmi2 = subset(res,logFC>0)
resmi2= subset(resmi2,P.Value<0.1)
library(calibrate)
with (resmi, textxy(logFC, -log10(P.Value), labs=resmi$Gene.symbol, cex=.8))
with (resmi1, textxy(logFC, -log10(P.Value), labs=resmi1$Gene.symbol, cex=.8))
with (resmi2, textxy(logFC, -log10(P.Value), labs=resmi2$Gene.symbol, cex=.8))
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
# downregulated genes
resmi1 = subset(res,logFC<0)
gene_list= read.csv("ECM22gene.csv")
gene_list
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
res = MvsF
# Make a basic volcano plot
with(res, plot(logFC, -log10(P.Value),pch=20, ylab = "-log10 (P.Value)",main="The expression of ECM proteins in Malignant vs Fibroblast samples",ylim=c(0,4), xlim=c(-20.15,20)))
# if logFC value more than 1 = red
with(subset(res,logFC>0), points(logFC, -log10(P.Value), pch=20, col="red")) # upregulated
# if logFC value less than -1 = blue
with(subset(res,logFC<0), points(logFC, -log10(P.Value), pch=20, col="blue")) # downregulated
# if P value more than 0.1 = lightgrey
with(subset(res, P.Value>0.1 ), points(logFC, -log10(P.Value), pch=20, col="lightgrey"))
gene_list <- scan("ECM22gene.csv", what="", sep="\n")
gene_list <- as.vector(gene_list)
resmi = res[as.vector(res$Gene.symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
# downregulated genes
resmi1 = subset(res,logFC<0)
resmi1= subset(resmi1,P.Value<0.1)
#upregulated genes
resmi2 = subset(res,logFC>0)
resmi2= subset(resmi2,P.Value<0.1)
library(calibrate)
with (resmi, textxy(logFC, -log10(P.Value), labs=resmi$Gene.symbol, cex=.8))
with (resmi1, textxy(logFC, -log10(P.Value), labs=resmi1$Gene.symbol, cex=.8))
with (resmi2, textxy(logFC, -log10(P.Value), labs=resmi2$Gene.symbol, cex=.8))
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
res = MvsF
# Make a basic volcano plot
with(res, plot(logFC, -log10(P.Value),pch=20, ylab = "-log10 (P.Value)",main="The expression of ECM proteins in Malignant vs Fibroblast samples",ylim=c(0,4), xlim=c(-20.15,20)))
# if logFC value more than 1 = red
with(subset(res,logFC>0), points(logFC, -log10(P.Value), pch=20, col="red")) # upregulated
# if logFC value less than -1 = blue
with(subset(res,logFC<0), points(logFC, -log10(P.Value), pch=20, col="blue")) # downregulated
# if P value more than 0.1 = lightgrey
with(subset(res, P.Value>0.1 ), points(logFC, -log10(P.Value), pch=20, col="lightgrey"))
gene_list <- scan("ECM22gene.csv", what="", sep="\n")
gene_list <- as.vector(gene_list)
resmi = res[as.vector(res$Gene.symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
# downregulated genes
resmi1 = subset(res,logFC<0)
resmi1= subset(resmi1,P.Value<0.1)
#upregulated genes
resmi2 = subset(res,logFC>0)
resmi2= subset(resmi2,P.Value<0.1)
library(calibrate)
with (resmi, textxy(logFC, -log10(P.Value), labs=resmi$Gene.symbol, cex=.8))
with (resmi1, textxy(logFC, -log10(P.Value), labs=resmi1$Gene.symbol, cex=.8))
with (resmi2, textxy(logFC, -log10(P.Value), labs=resmi2$Gene.symbol, cex=.8))
# Make a basic volcano plot
with(res, plot(logFC, -log10(P.Value),pch=20, ylab = "-log10 (P.Value)",main="The expression of ECM proteins in Malignant vs Fibroblast samples",ylim=c(0,4), xlim=c(-20.15,20)))
# if logFC value more than 1 = red
with(subset(res,logFC>0), points(logFC, -log10(P.Value), pch=20, col="red")) # upregulated
# if logFC value less than -1 = blue
with(subset(res,logFC<0), points(logFC, -log10(P.Value), pch=20, col="blue")) # downregulated
# if P value more than 0.1 = lightgrey
with(subset(res, P.Value>0.1 ), points(logFC, -log10(P.Value), pch=20, col="lightgrey"))
gene_list <- scan("ECM22gene.csv", what="", sep="\n")
gene_list <- as.vector(gene_list)
resmi = res[as.vector(res$Gene.symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
# downregulated genes
resmi1 = subset(res,logFC<0)
resmi1= subset(resmi1,P.Value<0.1)
#upregulated genes
resmi2 = subset(res,logFC>0)
resmi2= subset(resmi2,P.Value<0.1)
library(calibrate)
with (resmi, textxy(logFC, -log10(P.Value), labs=resmi$Gene.symbol, cex=.8))
with (resmi1, textxy(logFC, -log10(P.Value), labs=resmi1$Gene.symbol, cex=.8))
gene_list
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
res = MvsF
# Make a basic volcano plot
with(res, plot(logFC, -log10(P.Value),pch=20, ylab = "-log10 (P.Value)",main="The expression of ECM proteins in Malignant vs Fibroblast samples",ylim=c(0,4), xlim=c(-20.15,20)))
# if logFC value more than 1 = red
with(subset(res,logFC>0), points(logFC, -log10(P.Value), pch=20, col="red")) # upregulated
# if logFC value less than -1 = blue
with(subset(res,logFC<0), points(logFC, -log10(P.Value), pch=20, col="blue")) # downregulated
# if P value more than 0.1 = lightgrey
with(subset(res, P.Value>0.1 ), points(logFC, -log10(P.Value), pch=20, col="lightgrey"))
gene_list <- scan("ECM22gene.csv", what="", sep="\n")
gene_list <- as.vector(gene_list)
resmi = res[as.vector(res$Gene.symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
gene_list= read.csv("ECM22gene.csv")
gene_list
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
res = MvsF
# Make a basic volcano plot
with(res, plot(logFC, -log10(P.Value),pch=20, ylab = "-log10 (P.Value)",main="The expression of ECM proteins in Malignant vs Fibroblast samples",ylim=c(0,4), xlim=c(-20.15,20)))
# if logFC value more than 1 = red
with(subset(res,logFC>0), points(logFC, -log10(P.Value), pch=20, col="red")) # upregulated
# if logFC value less than -1 = blue
with(subset(res,logFC<0), points(logFC, -log10(P.Value), pch=20, col="blue")) # downregulated
# if P value more than 0.1 = lightgrey
with(subset(res, P.Value>0.1 ), points(logFC, -log10(P.Value), pch=20, col="lightgrey"))
gene_list <- scan("ECM22gene.csv", what="", sep="\n")
gene_list <- as.vector(gene_list)
resmi = res[as.vector(res$Gene.symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
resmi = res[as.vector(res$Gene.symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="pink"))
# downregulated genes
resmi1 = subset(res,logFC<0)
resmi1= subset(resmi1,P.Value<0.1)
#upregulated genes
resmi2 = subset(res,logFC>0)
resmi2= subset(resmi2,P.Value<0.1)
library(calibrate)
with (resmi, textxy(logFC, -log10(P.Value), labs=resmi$Gene.symbol, cex=.8))
with (resmi1, textxy(logFC, -log10(P.Value), labs=resmi1$Gene.symbol, cex=.8))
resmi = res[as.vector(res$Gene.symbol) %in% gene_list,]
resmi
dave = read.csv("ECM22gene.csv")
resmi = res[as.vector(res$Gene.symbol) %in% gene_list,]
dave = read.csv("ECM22gene.csv")
resmi = res[as.vector(res$Gene.symbol) %in% dave,]
dave
with(resmi, points(logFC, -log10(P.Value), pch=20, col="pink"))
with(dave, points(logFC, -log10(P.Value), pch=20, col="pink"))
dave = read.csv("ECM22gene.csv")
resmi = res[as.vector(res$Gene.symbol) %in% dave,]
resmi
dave = read.csv("ECM22gene.csv")
resmi
View(resmi)
gene_list= read.csv("ECM22gene.csv")
gene_list
gene_list
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
res = MvsF
# Make a basic volcano plot
with(res, plot(logFC, -log10(P.Value),pch=20, ylab = "-log10 (P.Value)",main="The expression of ECM proteins in Malignant vs Fibroblast samples",ylim=c(0,4), xlim=c(-20.15,20)))
# if logFC value more than 1 = red
with(subset(res,logFC>0), points(logFC, -log10(P.Value), pch=20, col="red")) # upregulated
# if logFC value less than -1 = blue
with(subset(res,logFC<0), points(logFC, -log10(P.Value), pch=20, col="blue")) # downregulated
# if P value more than 0.1 = lightgrey
with(subset(res, P.Value>0.1 ), points(logFC, -log10(P.Value), pch=20, col="lightgrey"))
gene_list <- scan("ECM22gene.csv", what="", sep="\n")
gene_list <- as.vector(gene_list)
resmi = res[as.vector(res$Gene.symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
View(resmi)
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
res = MvsF
res
resmi = res[as.vector(res$Gene.symbol) %in% gene_list,]
resmi
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
MvsF
res
resmi = res[as.vector(res$Gene.symbol) %in% gene_list,]
resmi
resmi = res[as.vector(res$Gene.Symbol) %in% gene_list,]
resmi
resmi = res[as.vector(res$Gene.Symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
# downregulated genes
resmi1 = subset(res,logFC<0)
resmi1= subset(resmi1,P.Value<0.1)
#upregulated genes
resmi2 = subset(res,logFC>0)
resmi2= subset(resmi2,P.Value<0.1)
library(calibrate)
with (resmi, textxy(logFC, -log10(P.Value), labs=resmi$Gene.symbol, cex=.8))
with (resmi1, textxy(logFC, -log10(P.Value), labs=resmi1$Gene.symbol, cex=.8))
with (resmi2, textxy(logFC, -log10(P.Value), labs=resmi2$Gene.symbol, cex=.8))
gene_list= read.csv("ECM22gene.csv")
gene_list
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
#jpeg('MalignantvsFibroblastVP.jpg') # export image
# Make a basic volcano plot
with(res, plot(logFC, -log10(P.Value),pch=20, ylab = "-log10 (P.Value)",main="The expression of ECM proteins in Malignant vs Fibroblast samples",ylim=c(0,4), xlim=c(-20.15,20)))
# if logFC value more than 1 = red
with(subset(res,logFC>0), points(logFC, -log10(P.Value), pch=20, col="red")) # upregulated
# if logFC value less than -1 = blue
with(subset(res,logFC<0), points(logFC, -log10(P.Value), pch=20, col="blue")) # downregulated
# if P value more than 0.1 = lightgrey
with(subset(res, P.Value>0.1 ), points(logFC, -log10(P.Value), pch=20, col="lightgrey"))
gene_list <- scan("ECM22gene.csv", what="", sep="\n")
gene_list <- as.vector(gene_list)
resmi = res[as.vector(res$Gene.Symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
#with(res[as.vector(res$Gene.symbol) %in% gene_list,], labels = gene_list (logFC, -log10(P.Value), pch=20, col="orange"))
# downregulated genes
resmi1 = subset(res,logFC<0)
resmi1= subset(resmi1,P.Value<0.1)
#upregulated genes
resmi2 = subset(res,logFC>0)
resmi2= subset(resmi2,P.Value<0.1)
library(calibrate)
with (resmi, textxy(logFC, -log10(P.Value), labs=resmi$Gene.Symbol, cex=.8))
with (resmi1, textxy(logFC, -log10(P.Value), labs=resmi1$Gene.Symbol, cex=.8))
with (resmi2, textxy(logFC, -log10(P.Value), labs=resmi2$Gene.Symbol, cex=.8))
#dev.off()
gene_list= read.csv("ECM22gene.csv")
gene_list
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
#jpeg('MalignantvsFibroblastVP.jpg') # export image
# Make a basic volcano plot
with(res, plot(logFC, -log10(P.Value),pch=20, ylab = "-log10 (P.Value)",main="The expression of ECM proteins in Malignant vs Fibroblast samples",ylim=c(0,4), xlim=c(-20.15,20)))
# if logFC value more than 1 = red
with(subset(res,logFC>0), points(logFC, -log10(P.Value), pch=20, col="red")) # upregulated
# if logFC value less than -1 = blue
with(subset(res,logFC<0), points(logFC, -log10(P.Value), pch=20, col="blue")) # downregulated
# if P value more than 0.1 = lightgrey
with(subset(res, P.Value>0.1 ), points(logFC, -log10(P.Value), pch=20, col="lightgrey"))
gene_list <- scan("ECM22gene.csv", what="", sep="\n")
gene_list <- as.vector(gene_list)
resmi = res[as.vector(res$Gene.Symbol) %in% gene_list,]
#with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
#with(res[as.vector(res$Gene.symbol) %in% gene_list,], labels = gene_list (logFC, -log10(P.Value), pch=20, col="orange"))
# downregulated genes
resmi1 = subset(res,logFC<0)
resmi1= subset(resmi1,P.Value<0.1)
#upregulated genes
resmi2 = subset(res,logFC>0)
resmi2= subset(resmi2,P.Value<0.1)
library(calibrate)
with (resmi, textxy(logFC, -log10(P.Value), labs=resmi$Gene.Symbol, cex=.8))
with (resmi1, textxy(logFC, -log10(P.Value), labs=resmi1$Gene.Symbol, cex=.8))
with (resmi2, textxy(logFC, -log10(P.Value), labs=resmi2$Gene.Symbol, cex=.8))
#dev.off()
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
gene_list= read.csv("ECM22gene.csv")
gene_list
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
#jpeg('MalignantvsFibroblastVP.jpg') # export image
# Make a basic volcano plot
with(res, plot(logFC, -log10(P.Value),pch=20, ylab = "-log10 (P.Value)",main="The expression of ECM proteins in Malignant vs Fibroblast samples",ylim=c(0,4), xlim=c(-20.15,20)))
# if logFC value more than 1 = red
with(subset(res,logFC>0), points(logFC, -log10(P.Value), pch=20, col="red")) # upregulated
# if logFC value less than -1 = blue
with(subset(res,logFC<0), points(logFC, -log10(P.Value), pch=20, col="blue")) # downregulated
# if P value more than 0.1 = lightgrey
with(subset(res, P.Value>0.1 ), points(logFC, -log10(P.Value), pch=20, col="lightgrey"))
gene_list <- scan("ECM22gene.csv", what="", sep="\n")
gene_list <- as.vector(gene_list)
resmi = res[as.vector(res$Gene.Symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
#with(res[as.vector(res$Gene.symbol) %in% gene_list,], labels = gene_list (logFC, -log10(P.Value), pch=20, col="orange"))
# downregulated genes
resmi1 = subset(res,logFC<0)
resmi1= subset(resmi1,P.Value<0.1)
#upregulated genes
resmi2 = subset(res,logFC>0)
resmi2= subset(resmi2,P.Value<0.1)
library(calibrate)
#with (resmi, textxy(logFC, -log10(P.Value), labs=resmi$Gene.Symbol, cex=.8))
#with (resmi1, textxy(logFC, -log10(P.Value), labs=resmi1$Gene.Symbol, cex=.8))
#with (resmi2, textxy(logFC, -log10(P.Value), labs=resmi2$Gene.Symbol, cex=.8))
#dev.off()
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
# Make a basic volcano plot
with(res, plot(logFC, -log10(P.Value),pch=20, ylab = "-log10 (P.Value)",main="The expression of ECM proteins in Malignant vs Fibroblast samples",ylim=c(0,4), xlim=c(-20.15,20)))
# if logFC value more than 1 = red
with(subset(res,logFC>0), points(logFC, -log10(P.Value), pch=20, col="red")) # upregulated
# if logFC value less than -1 = blue
with(subset(res,logFC<0), points(logFC, -log10(P.Value), pch=20, col="blue")) # downregulated
# if P value more than 0.1 = lightgrey
with(subset(res, P.Value>0.1 ), points(logFC, -log10(P.Value), pch=20, col="lightgrey"))
gene_list <- scan("ECM22gene.csv", what="", sep="\n")
gene_list <- as.vector(gene_list)
resmi = res[as.vector(res$Gene.Symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
# downregulated genes
resmi1 = subset(res,logFC<0)
resmi1= subset(resmi1,P.Value<0.1)
#upregulated genes
resmi2 = subset(res,logFC>0)
resmi2= subset(resmi2,P.Value<0.1)
library(calibrate)
gene_list= read.csv("ECM22gene.csv")
gene_list
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
#jpeg('MalignantvsFibroblastVP.jpg') # export image
# Make a basic volcano plot
with(res, plot(logFC, -log10(P.Value),pch=20, ylab = "-log10 (P.Value)",main="The expression of ECM proteins in Malignant vs Fibroblast samples",ylim=c(0,4), xlim=c(-20.15,20)))
# if logFC value more than 1 = red
with(subset(res,logFC>0), points(logFC, -log10(P.Value), pch=20, col="red")) # upregulated
# if logFC value less than -1 = blue
with(subset(res,logFC<0), points(logFC, -log10(P.Value), pch=20, col="blue")) # downregulated
# if P value more than 0.1 = lightgrey
with(subset(res, P.Value>0.1 ), points(logFC, -log10(P.Value), pch=20, col="lightgrey"))
gene_list <- scan("ECM22gene.csv", what="", sep="\n")
gene_list <- as.vector(gene_list)
resmi = res[as.vector(res$Gene.Symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
#with(res[as.vector(res$Gene.symbol) %in% gene_list,], labels = gene_list (logFC, -log10(P.Value), pch=20, col="orange"))
# downregulated genes
resmi1 = subset(res,logFC<0)
resmi1= subset(resmi1,P.Value<0.1)
#upregulated genes
resmi2 = subset(res,logFC>0)
resmi2= subset(resmi2,P.Value<0.1)
library(calibrate)
#with (resmi, textxy(logFC, -log10(P.Value), labs=resmi$Gene.Symbol, cex=.8))
#with (resmi1, textxy(logFC, -log10(P.Value), labs=resmi1$Gene.Symbol, cex=.8))
#with (resmi2, textxy(logFC, -log10(P.Value), labs=resmi2$Gene.Symbol, cex=.8))
#dev.off()
gene_list= read.csv("ECM22gene.csv")
gene_list
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
#jpeg('MalignantvsFibroblastVP.jpg') # export image
# Make a basic volcano plot
with(res, plot(logFC, -log10(P.Value),pch=20, ylab = "-log10 (P.Value)",main="The expression of ECM proteins in Malignant vs Fibroblast samples",ylim=c(0,4), xlim=c(-20.15,20)))
# if logFC value more than 1 = red
with(subset(res,logFC>0), points(logFC, -log10(P.Value), pch=20, col="red")) # upregulated
# if logFC value less than -1 = blue
with(subset(res,logFC<0), points(logFC, -log10(P.Value), pch=20, col="blue")) # downregulated
# if P value more than 0.1 = lightgrey
with(subset(res, P.Value>0.1 ), points(logFC, -log10(P.Value), pch=20, col="lightgrey"))
gene_list <- scan("ECM22gene.csv", what="", sep="\n")
gene_list <- as.vector(gene_list)
resmi = res[as.vector(res$Gene.Symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
#with(res[as.vector(res$Gene.symbol) %in% gene_list,], labels = gene_list (logFC, -log10(P.Value), pch=20, col="orange"))
# downregulated genes
resmi1 = subset(res,logFC<0)
resmi1= subset(resmi1,P.Value<0.1)
#upregulated genes
resmi2 = subset(res,logFC>0)
resmi2= subset(resmi2,P.Value<0.1)
library(calibrate)
#with (resmi, textxy(logFC, -log10(P.Value), labs=resmi$Gene.Symbol, cex=.8))
#with (resmi1, textxy(logFC, -log10(P.Value), labs=resmi1$Gene.Symbol, cex=.8))
#with (resmi2, textxy(logFC, -log10(P.Value), labs=resmi2$Gene.Symbol, cex=.8))
#dev.off()
gene_list= read.csv("ECM22gene.csv")
gene_list
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
#jpeg('MalignantvsFibroblastVP.jpg') # export image
# Make a basic volcano plot
with(res, plot(logFC, -log10(P.Value),pch=20, ylab = "-log10 (P.Value)",main="The Expression of ECM proteins in Malignant vs Fibroblast samples",ylim=c(0,4), xlim=c(-20.15,20)))
# if logFC value more than 1 = red
with(subset(res,logFC>0), points(logFC, -log10(P.Value), pch=20, col="red")) # upregulated
# if logFC value less than -1 = blue
with(subset(res,logFC<0), points(logFC, -log10(P.Value), pch=20, col="blue")) # downregulated
# if P value more than 0.1 = lightgrey
with(subset(res, P.Value>0.1 ), points(logFC, -log10(P.Value), pch=20, col="lightgrey"))
gene_list <- scan("ECM22gene.csv", what="", sep="\n")
gene_list <- as.vector(gene_list)
resmi = res[as.vector(res$Gene.Symbol) %in% gene_list,]
with(resmi, points(logFC, -log10(P.Value), pch=20, col="orange"))
#with(res[as.vector(res$Gene.symbol) %in% gene_list,], labels = gene_list (logFC, -log10(P.Value), pch=20, col="orange"))
# downregulated genes
resmi1 = subset(res,logFC<0)
resmi1= subset(resmi1,P.Value<0.1)
#upregulated genes
resmi2 = subset(res,logFC>0)
resmi2= subset(resmi2,P.Value<0.1)
library(calibrate)
#with (resmi, textxy(logFC, -log10(P.Value), labs=resmi$Gene.Symbol, cex=.8))
#with (resmi1, textxy(logFC, -log10(P.Value), labs=resmi1$Gene.Symbol, cex=.8))
#with (resmi2, textxy(logFC, -log10(P.Value), labs=resmi2$Gene.Symbol, cex=.8))
#dev.off()
# MOCS vs MOSE
comp1 = read.csv("../Python/Heatmap_Analysis/Comparison Gsets/MOCSvsMOSE_gset.csv", header = TRUE, row.names = 1)
data = comp1[9:45] # select the samples columns
annot = read.csv("../Data/annot_045.csv", header = TRUE, row.names = 1) # sample annotation
metadata<-subset(annot, Group=="MOCS"|Group=="MOSE") # select the sample groups for comparison
rownames(metadata) <- colnames(data) # match the samples in the two datasets
# code for the heatmap
require(pheatmap)
out <- pheatmap(data,
show_rownames=F, color = c("#2c7fb8", "#fee6ce", "#e6550d"),breaks = c(-4,0,2,4),main = "MOCS vs MOSE",fontsize = 7,
cluster_cols=T, cluster_rows=T, scale="row",cex=1, clustering_distance_rows="euclidean", cex=1,
clustering_distance_cols="euclidean", clustering_method="complete", border_color=FALSE,
annotation_col=metadata, xlim=c(-7.7,7))
setwd("~/GSE40595/R Reports")
# MOCS vs MOSE
comp1 = read.csv("../Python/Heatmap_Analysis/Comparison Gsets/MOCSvsMOSE_gset.csv", header = TRUE, row.names = 1)
data = comp1[9:45] # select the samples columns
annot = read.csv("../Data/annot_045.csv", header = TRUE, row.names = 1) # sample annotation
metadata<-subset(annot, Group=="MOCS"|Group=="MOSE") # select the sample groups for comparison
rownames(metadata) <- colnames(data) # match the samples in the two datasets
# code for the heatmap
require(pheatmap)
out <- pheatmap(data,
show_rownames=F, color = c("#2c7fb8", "#fee6ce", "#e6550d"),breaks = c(-4,0,2,4),main = "MOCS vs MOSE",fontsize = 7,
cluster_cols=T, cluster_rows=T, scale="row",cex=1, clustering_distance_rows="euclidean", cex=1,
clustering_distance_cols="euclidean", clustering_method="complete", border_color=FALSE,
annotation_col=metadata, xlim=c(-7.7,7))
-
-
-
mycols <- brewer.pal(10, "RdBu")
require(pheatmap)
# install.packages("pheatmap", "RColorBrewer", "viridis")
library(pheatmap)
library(RColorBrewer)
library(viridis)
mycols <- brewer.pal(10, "RdBu")
require(pheatmap)
out <- pheatmap(data,
show_rownames=F, color = mycols ,breaks = c(-2,-1.5,-1,-0.5,0,0.5,1,1.5,2,2.5)
,main = "MOCS vs MOSE",fontsize = 7, cluster_cols=T, cluster_rows=T, scale="row",cex=1, clustering_distance_rows="euclidean", cex=1,
clustering_distance_cols="euclidean", clustering_method="complete", border_color=FALSE,
annotation_col=metadata, xlim=c(-7.7,7))
comp1 = read.csv("original_datav2.csv", header = TRUE)
#All Genes
# MOCS vs MOSE
MvsF = read.csv("P-Value_LFC.csv") # read csv
data = scale(log(comp1[9:45])) # select the samples columns
mat = as.matrix(data)
data = scale(log(comp1[9:45])) # select the samples columns
# MOCS vs MOSE
comp1 = read.csv("../Python/Heatmap_Analysis/Comparison Gsets/MOCSvsMOSE_gset.csv", header = TRUE, row.names = 1)
data = scale(log(comp1[9:45])) # select the samples columns
warnings
warnings()
m
data = scale(comp1[9:45]) # select the samples columns
mat = as.matrix(data)
annot = read.csv("../Data/annot_045.csv", header = TRUE, row.names = 1) # sample annotation
metadata<-subset(annot, Group=="MOCS"|Group=="MOSE") # select the sample groups for comparison
rownames(metadata) <- colnames(data) # match the samples in the two datasets
mycols <- brewer.pal(10, "RdBu")
require(pheatmap)
out <- pheatmap(mat,
show_rownames=F, color = mycols ,breaks = c(-2,-1.5,-1,-0.5,0,0.5,1,1.5,2,2.5)
,main = "MOCS vs MOSE",fontsize = 7, cluster_cols=T, cluster_rows=T, scale="row",cex=1, clustering_distance_rows="euclidean", cex=1,
clustering_distance_cols="euclidean", clustering_method="complete", border_color=FALSE,
annotation_col=metadata, xlim=c(-7.7,7))
log(comp1)
# MOCS vs MOSE
comp1 = read.csv("../Python/Heatmap_Analysis/Comparison Gsets/MOCSvsMOSE_gset.csv", header = TRUE, row.names = 1)
data = comp1[9:45] # select the samples columns
annot = read.csv("../Data/annot_045.csv", header = TRUE, row.names = 1) # sample annotation
metadata<-subset(annot, Group=="MOCS"|Group=="MOSE") # select the sample groups for comparison
rownames(metadata) <- colnames(data) # match the samples in the two datasets
mycols <- brewer.pal(10, "RdBu")
require(pheatmap)
out <- pheatmap(data,
show_rownames=F, color = mycols,breaks = c(-2,-1.5,-1,-0.5,0,0.5,1,1.5,2,2.5)
,main = "MOCS vs MOSE",fontsize = 7, cluster_cols=T, cluster_rows=T, scale="row",cex=1, clustering_distance_rows="euclidean", cex=1,
clustering_distance_cols="euclidean", clustering_method="complete", border_color=FALSE,
annotation_col=metadata, xlim=c(-7.7,7))
data = scale(comp1[9:45]) # select the samples columns
annot = read.csv("../Data/annot_045.csv", header = TRUE, row.names = 1) # sample annotation
metadata<-subset(annot, Group=="MOCS"|Group=="MOSE") # select the sample groups for comparison
rownames(metadata) <- colnames(data) # match the samples in the two datasets
mycols <- brewer.pal(10, "RdBu")
require(pheatmap)
out <- pheatmap(data,
show_rownames=F, color = mycols,breaks = c(-2,-1.5,-1,-0.5,0,0.5,1,1.5,2,2.5)
,main = "MOCS vs MOSE",fontsize = 7, cluster_cols=T, cluster_rows=T, scale="row",cex=1, clustering_distance_rows="euclidean", cex=1,
clustering_distance_cols="euclidean", clustering_method="complete", border_color=FALSE,
annotation_col=metadata, xlim=c(-7.7,7))
data = scale(log(comp1[9:45])) # select the samples columns
annot = read.csv("../Data/annot_045.csv", header = TRUE, row.names = 1) # sample annotation
metadata<-subset(annot, Group=="MOCS"|Group=="MOSE") # select the sample groups for comparison
rownames(metadata) <- colnames(data) # match the samples in the two datasets
mycols <- brewer.pal(10, "RdBu")
require(pheatmap)
out <- pheatmap(data,
show_rownames=F, color = mycols,breaks = c(-2,-1.5,-1,-0.5,0,0.5,1,1.5,2,2.5)
,main = "MOCS vs MOSE",fontsize = 7, cluster_cols=T, cluster_rows=T, scale="row",cex=1, clustering_distance_rows="euclidean", cex=1,
clustering_distance_cols="euclidean", clustering_method="complete", border_color=FALSE,
annotation_col=metadata, xlim=c(-7.7,7))
data = scale(log+3(comp1[9:45])) # select the samples columns
data = scale(log10(comp1[9:45])) # select the samples columns
