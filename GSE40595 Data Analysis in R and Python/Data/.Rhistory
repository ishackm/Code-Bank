knitr::opts_chunk$set(echo = TRUE)
# make proper column names to match toptable
fvarLabels(gset) <- make.names(fvarLabels(gset))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(Biobase)
library(GEOquery)
library(limma)
# make proper column names to match toptable
fvarLabels(gset) <- make.names(fvarLabels(gset))
# load series and platform data from GEO
gset <- getGEO("GSE40595", GSEMatrix =TRUE, AnnotGPL=TRUE)
# load series and platform data from GEO
gset <- getGEO("GSE40595", GSEMatrix =TRUE, AnnotGPL=TRUE)
if (length(gset) > 1) idx <- grep("GPL570", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
# load series and platform data from GEO
gset <- getGEO("GSE40595", GSEMatrix =TRUE, AnnotGPL=TRUE)
if (length(gset) > 1) idx <- grep("GPL570", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
sml = c("G0","G1","G2","G4");
for (i in 1:nchar(gsms)) { sml[i] <- substr(gsms,i,i) }
################################################################
#   Differential expression analysis with limma
library(Biobase)
library(GEOquery)
library(limma)
gset <- getGEO("GSE40595", GSEMatrix =TRUE, AnnotGPL=TRUE)
# load series and platform data from GEO
gset <- getGEO("GSE40595", GSEMatrix =TRUE, AnnotGPL=TRUE)
if (length(gset) > 1) idx <- grep("GPL570", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
# make proper column names to match toptable
fvarLabels(gset) <- make.names(fvarLabels(gset))
sml = c("G0","G1","G2","G4");
exprs(gset) <-log2(exprs(gset))
log_ex <-exprs(gset)
knitr::opts_chunk$set(echo = TRUE)
library(Biobase)
library(GEOquery)
library(limma)
gset <- getGEO("GSE40595", GSEMatrix =TRUE, AnnotGPL=TRUE)
if (length(gset) > 1) idx <- grep("GPL570", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
# make proper column names to match toptable
fvarLabels(gset) <- make.names(fvarLabels(gset))
sml = c("G0","G1","G2","G4");
exprs(gset) <-log2(exprs(gset))
log_ex <-exprs(gset)
gset <- getGEO("GSE40595", GSEMatrix =TRUE, AnnotGPL=TRUE)
if (length(gset) > 1) idx <- grep("GPL570", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
# make proper column names to match toptable
fvarLabels(gset) <- make.names(fvarLabels(gset))
sml = c("G0","G1","G2","G4");
exprs(gset) <-log2(exprs(gset))
log_ex <-exprs(gset)
gset <- getGEO("GSE40595", GSEMatrix =TRUE, AnnotGPL=TRUE)
if (length(gset) > 1) idx <- grep("GPL570", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
sml = c("G0","G1","G2","G3");
exprs(gset) <-log2(exprs(gset))
log_ex <-exprs(gset)
gset <- getGEO("GSE40595", GSEMatrix =TRUE, AnnotGPL=TRUE)
if (length(gset) > 1) idx <- grep("GPL570", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
